-- MySQL Script generated by MySQL Workbench
-- Tue Mar  8 21:55:11 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema GISApp
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema GISApp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GISApp` DEFAULT CHARACTER SET utf8 ;
USE `GISApp` ;

-- -----------------------------------------------------
-- Table `GISApp`.`POST_INFORMATION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GISApp`.`POST_INFORMATION` (
  `ID` BIGINT NOT NULL,
  `TIME` DATETIME(3) NOT NULL,
  `LATITUDE` VARCHAR(45) NULL,
  `LONGITUDE` VARCHAR(45) NULL,
  `INFORMATION` VARCHAR(255) NULL,
  `APPROVED` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GISApp`.`FILE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GISApp`.`FILE` (
  `ID` BIGINT NOT NULL,
  `FILE` MEDIUMBLOB NOT NULL COMMENT 'ファイル',
  PRIMARY KEY (`ID`),
  INDEX `fk_FILE_POST_INFORMATION1_idx` (`ID` ASC) VISIBLE,
  CONSTRAINT `fk_FILE_POST_INFORMATION1`
    FOREIGN KEY (`ID`)
    REFERENCES `GISApp`.`POST_INFORMATION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GISApp`.`POINT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GISApp`.`POINT` (
  `POINT_ID` VARCHAR(32) NOT NULL,
  `PRIVATE` TINYINT NOT NULL,
  `TYPE` VARCHAR(45) NOT NULL,
  `X` DOUBLE NOT NULL,
  `Y` DOUBLE NOT NULL,
  `Z` DOUBLE NULL,
  `UPDATE_TIME` DATETIME(3) NOT NULL,
  PRIMARY KEY (`POINT_ID`))
ENGINE = InnoDB
COMMENT = '地点情報の追加情報を登録するテーブル';


-- -----------------------------------------------------
-- Table `GISApp`.`POINT_INFORMATION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GISApp`.`POINT_INFORMATION` (
  `POINT_ID` VARCHAR(32) NOT NULL COMMENT '地点番号',
  `NAME` VARCHAR(32) NOT NULL COMMENT '情報名',
  `TYPE` VARCHAR(20) NOT NULL COMMENT '情報種別',
  `STRING` LONGTEXT NULL,
  `NUMBER` DOUBLE NULL,
  `BOOLEAN` TINYINT NULL,
  `UPDATE_TIME` DATETIME(3) NOT NULL,
  PRIMARY KEY (`POINT_ID`, `NAME`))
ENGINE = InnoDB;

USE `GISApp` ;

-- -----------------------------------------------------
-- Placeholder table for view `GISApp`.`POINT_INFORMATION_VIEW`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GISApp`.`POINT_INFORMATION_VIEW` (`POINT_ID` INT, `PRIVATE` INT, `TYPE` INT, `X` INT, `Y` INT, `Z` INT, `P20_001` INT, `P20_002` INT, `P20_003` INT, `P20_004` INT, `P20_005` INT, `P20_006` INT, `P20_007` INT, `P20_008` INT, `P20_009` INT, `P20_010` INT, `P20_011` INT, `P20_012` INT, `OPEN` INT, `COMMENT` INT);

-- -----------------------------------------------------
-- View `GISApp`.`POINT_INFORMATION_VIEW`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GISApp`.`POINT_INFORMATION_VIEW`;
USE `GISApp`;
CREATE  OR REPLACE VIEW `POINT_INFORMATION_VIEW` AS
    SELECT 
        point.POINT_ID,
        point.PRIVATE,
        point.TYPE,
        X,
        Y,
        Z,
        info1.STRING AS P20_001,
        info2.STRING AS P20_002,
        info3.STRING AS P20_003,
        info4.STRING AS P20_004,
        info5.NUMBER AS P20_005,
        info6.NUMBER AS P20_006,
        info7.NUMBER AS P20_007,
        info8.NUMBER AS P20_008,
        info9.NUMBER AS P20_009,
        info10.NUMBER AS P20_010,
        info11.NUMBER AS P20_011,
        info12.NUMBER AS P20_012,
        info13.BOOLEAN AS OPEN,
        info14.STRING AS COMMENT
    FROM
        GISApp.POINT AS point
            JOIN
        GISApp.POINT_INFORMATION AS info1 ON info1.NAME = 'P20_001'
            AND point.POINT_ID = info1.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info2 ON info2.NAME = 'P20_002'
            AND point.POINT_ID = info2.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info3 ON info3.NAME = 'P20_003'
            AND point.POINT_ID = info3.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info4 ON info4.NAME = 'P20_004'
            AND point.POINT_ID = info4.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info5 ON info5.NAME = 'P20_005'
            AND point.POINT_ID = info5.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info6 ON info6.NAME = 'P20_006'
            AND point.POINT_ID = info6.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info7 ON info7.NAME = 'P20_007'
            AND point.POINT_ID = info7.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info8 ON info8.NAME = 'P20_008'
            AND point.POINT_ID = info8.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info9 ON info9.NAME = 'P20_009'
            AND point.POINT_ID = info9.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info10 ON info10.NAME = 'P20_010'
            AND point.POINT_ID = info10.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info11 ON info11.NAME = 'P20_011'
            AND point.POINT_ID = info11.POINT_ID
            JOIN
        GISApp.POINT_INFORMATION AS info12 ON info12.NAME = 'P20_012'
            AND point.POINT_ID = info12.POINT_ID
            LEFT JOIN
        GISApp.POINT_INFORMATION AS info13 ON info13.NAME = 'OPEN'
            AND point.POINT_ID = info13.POINT_ID
            LEFT JOIN
        GISApp.POINT_INFORMATION AS info14 ON info14.NAME = 'COMMENT'
            AND point.POINT_ID = info14.POINT_ID;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
